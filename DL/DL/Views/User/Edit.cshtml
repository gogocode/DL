@model DL.Web.ViewModels.User.UserEditVM

@{
    ViewBag.Title = "[帳號 / 編輯]";
}

<script type="text/javascript">

    $(document).ready(function () {
            $("form").makeValidationInline();
    });

</script>

<br />
<label class="title">@ViewBag.Title</label>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.OriginPassword)
        <div class="form-group">
            @Html.LabelFor(model => model.UserAccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserAccount, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserAccount, "", new { @class = "text-danger" })
            </div>
        </div>

        @if(!(Convert.ToBoolean(TempData["IsSupperUser"]) == true) || (Model.UserAccount == "9999"))
        {

        <div class="form-group">
            @Html.LabelFor(model => model.UserPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserPassword, new { htmlAttributes = new { @placeholder = "必填欄位", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @placeholder = "必填欄位", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        }
        else
        {
            @Html.HiddenFor(model => model.UserPassword)
            @Html.HiddenFor(model => model.ConfirmPassword)
        }

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @placeholder = "必填欄位", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserEmail, new { htmlAttributes = new { @placeholder = "必填欄位", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="儲存" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@if ((Convert.ToBoolean(TempData["IsSupperUser"]) == true))
{
<div>
    @Html.ActionLink("返回列表", "Index", null, new { @class = "btn btn-default" })
</div>
}